GCRoot是哪些？
内存分配模型，年轻、年老、持久代的比例
类加载器？
LeapCanary的原理是什么？
bitmap内存优化？


1、Java 内存分配
Java的内存分配区域分为如下五部分：
1）、方法区：主要存放静态常量。
2）、虚拟机栈：Java变量引用。
3）、本地方法栈：native变量引用。
4）、堆：对象。
5）、程序计数器：计算当前线程的当前方法执行到多少行。

2、Java内存回收算法
（1）标记-清除算法
流程可简述为两步：
1）、标记所有需要回收的对象。
2）、统一回收所有被标记的对象。

优点：
实现比较简单。

缺点：
1）、标记、清除效率不高。
2）、产生大量内存碎片。

（2）复制算法
流程可简述为 三步：
1）、将内存划分为大小相等的两块。
2）、一块内存用完之后复制存活对象到另一块。
3）、清理另一块内存。
##这里的话，是不是重在查询、复制，清除操作是很高效的。

优点
实现简单，运行高效，每次仅需遍历标记一半的内存区域。
缺点
会浪费一半的空间，代价大。

（3）标记-整理算法
流程可简述为 三步：
1）、标记过程与 标记-清除算法 一样。
2）、存活对象往一端进行移动。
3）、清理其余内存。
##这个相对于复制算法有什么区别呢？是不是并发GC呢？在移动的过程，不能进行分配内存。
优点
1）、避免 标记-清除 导致的内存碎片。
2）、避免复制算法的空间浪费。

（4）分代收集算法
现在主流的虚拟机 一般用的比较多的还是分代收集算法，它具有如下 特点：
1）、结合多种算法优势。
2）、新生代对象存活率低，使用 复制算法。
3）、老年代对象存活率高，使用 标记-整理算法。

